"use strict";(self.webpackChunkobstacle_component=self.webpackChunkobstacle_component||[]).push([[8558],{98558:(e,t,i)=>{i.r(t),i.d(t,{default:()=>S});var a=i(36663),l=i(66341),r=i(70375),n=i(61681),o=i(15842),s=i(78668),h=i(3466),c=i(81977),p=(i(7753),i(7283),i(34248)),u=i(40266),d=i(64307),v=i(38481),m=i(89993),y=i(87232),f=i(43330),_=i(18241),b=i(51599),w=i(27299);let g=class extends((0,m.Z)((0,y.Y)((0,f.q)((0,_.I)((0,o.R)(v.Z)))))){constructor(...e){super(...e),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=(0,w.w)()}normalizeCtorArgs(e,t){return"string"==typeof e?{url:e,...t}:e}destroy(){this._lercDecoder=(0,n.RY)(this._lercDecoder)}readVersion(e,t){let i=t.currentVersion;return i||(i=9.3),i}load(e){const t=(0,n.pC)(e)?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:e=>{for(let t=0;t<e.typeKeywords.length;t++)if("elevation 3d layer"===e.typeKeywords[t].toLowerCase())return!0;throw new r.Z("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},e).catch(s.r9).then((()=>this._fetchImageService(t)))),Promise.resolve(this)}fetchTile(e,t,i,a){const r=(0,n.pC)((a=a||{signal:null}).signal)?a.signal:a.signal=(new AbortController).signal,o={responseType:"array-buffer",signal:r},s={noDataValue:a.noDataValue,returnFileInfo:!0};return this.load().then((()=>this._fetchTileAvailability(e,t,i,a))).then((()=>(0,l.default)(this.getTileUrl(e,t,i),o))).then((e=>this._lercDecoder.decode(e.data,s,r))).then((e=>({values:e.pixelData,width:e.width,height:e.height,maxZError:e.fileInfo?.maxZError,noDataValue:e.noDataValue,minValue:e.minValue,maxValue:e.maxValue})))}getTileUrl(e,t,i){const a=!this.tilemapCache&&this.supportsBlankTile,l=(0,h.B7)({...this.parsedUrl.query,blankTile:!a&&null});return`${this.parsedUrl.path}/tile/${e}/${t}/${i}${l?"?"+l:""}`}async queryElevation(e,t){const{ElevationQuery:a}=await i.e(8184).then(i.bind(i,8184));return(0,s.k_)(t),(new a).query(this,e,t)}async createElevationSampler(e,t){const{ElevationQuery:a}=await i.e(8184).then(i.bind(i,8184));return(0,s.k_)(t),(new a).createSampler(this,e,t)}_fetchTileAvailability(e,t,i,a){return this.tilemapCache?this.tilemapCache.fetchAvailability(e,t,i,a):Promise.resolve("unknown")}async _fetchImageService(e){if(this.sourceJSON)return this.sourceJSON;const t={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:e},i=await(0,l.default)(this.parsedUrl.path,t);i.ssl&&(this.url=this.url?.replace(/^http:/i,"https:")),this.sourceJSON=i.data,this.read(i.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};(0,a._)([(0,c.Cb)({json:{read:{source:"copyrightText"}}})],g.prototype,"copyright",void 0),(0,a._)([(0,c.Cb)({readOnly:!0,type:d.Z})],g.prototype,"heightModelInfo",void 0),(0,a._)([(0,c.Cb)({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],g.prototype,"path",void 0),(0,a._)([(0,c.Cb)({type:["show","hide"]})],g.prototype,"listMode",void 0),(0,a._)([(0,c.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],g.prototype,"minScale",void 0),(0,a._)([(0,c.Cb)({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],g.prototype,"maxScale",void 0),(0,a._)([(0,c.Cb)({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],g.prototype,"opacity",void 0),(0,a._)([(0,c.Cb)({type:["ArcGISTiledElevationServiceLayer"]})],g.prototype,"operationalLayerType",void 0),(0,a._)([(0,c.Cb)()],g.prototype,"sourceJSON",void 0),(0,a._)([(0,c.Cb)({json:{read:!1},value:"elevation",readOnly:!0})],g.prototype,"type",void 0),(0,a._)([(0,c.Cb)(b.HQ)],g.prototype,"url",void 0),(0,a._)([(0,c.Cb)()],g.prototype,"version",void 0),(0,a._)([(0,p.r)("version",["currentVersion"])],g.prototype,"readVersion",null),g=(0,a._)([(0,u.j)("esri.layers.ElevationLayer")],g),g.prototype.fetchTile.__isDefault__=!0;const S=g},89993:(e,t,i)=>{i.d(t,{Z:()=>c});var a=i(36663),l=(i(91957),i(81977)),r=(i(7753),i(7283),i(34248)),n=i(40266),o=i(58269),s=i(52953),h=i(14685);const c=e=>{let t=class extends e{constructor(){super(...arguments),this.copyright=null,this.minScale=0,this.maxScale=0,this.spatialReference=null,this.tileInfo=null,this.tilemapCache=null}readMinScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}readMaxScale(e,t){return null!=t.minLOD&&null!=t.maxLOD?e:0}get supportsBlankTile(){return this.version>=10.2}readTilemapCache(e,t){return t.capabilities&&t.capabilities.includes("Tilemap")?new s.y({layer:this}):null}};return(0,a._)([(0,l.Cb)({json:{read:{source:"copyrightText"}}})],t.prototype,"copyright",void 0),(0,a._)([(0,l.Cb)()],t.prototype,"minScale",void 0),(0,a._)([(0,r.r)("service","minScale")],t.prototype,"readMinScale",null),(0,a._)([(0,l.Cb)()],t.prototype,"maxScale",void 0),(0,a._)([(0,r.r)("service","maxScale")],t.prototype,"readMaxScale",null),(0,a._)([(0,l.Cb)({type:h.Z})],t.prototype,"spatialReference",void 0),(0,a._)([(0,l.Cb)({readOnly:!0})],t.prototype,"supportsBlankTile",null),(0,a._)([(0,l.Cb)(o.h)],t.prototype,"tileInfo",void 0),(0,a._)([(0,l.Cb)()],t.prototype,"tilemapCache",void 0),(0,a._)([(0,r.r)("service","tilemapCache",["capabilities"])],t.prototype,"readTilemapCache",null),(0,a._)([(0,l.Cb)()],t.prototype,"version",void 0),t=(0,a._)([(0,n.j)("esri.layers.mixins.ArcGISCachedService")],t),t}},52953:(e,t,i)=>{i.d(t,{y:()=>D});var a,l=i(36663),r=i(66341),n=i(53443),o=i(4745),s=i(70375),h=i(53280),c=i(13802),p=i(55854),u=i(17135),d=i(78668),v=i(76868),m=i(17262),y=i(3466),f=i(81977),_=i(7753),b=i(69236),w=i(40266),g=i(23758),S=i(67134);class C{constructor(){this.location={left:0,top:0,width:0,height:0},this._allAvailability="unknown",this.byteSize=40}getAvailability(e,t){if("unknown"!==this._allAvailability)return this._allAvailability;const i=(e-this.location.top)*this.location.width+(t-this.location.left),a=i%8,l=i>>3,r=this._tileAvailabilityBitSet;return l<0||l>r.length?"unknown":r[l]&1<<a?"available":"unavailable"}_updateFromData(e){const t=this.location.width,i=this.location.height;let a=!0,l=!0;const r=Math.ceil(t*i/8),n=new Uint8Array(r);let o=0;for(let t=0;t<e.length;t++){const i=t%8;e[t]?(l=!1,n[o]|=1<<i):a=!1,7===i&&++o}l?this._allAvailability="unavailable":a?this._allAvailability="available":(this._allAvailability="unknown",this._tileAvailabilityBitSet=n,this.byteSize+=n.length)}static fromDefinition(e,t){const i=e.service.request||r.default,{row:a,col:l,width:n,height:o}=e,h={query:{f:"json"}};return t=t?{...h,...t}:h,i(function(e){let t;if("vector-tile"===e.service.type)t=`${e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`;else{const i=e.service.tileServers;t=`${i&&i.length?i[e.row%i.length]:e.service.url}/tilemap/${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}const i=e.service.query;return i&&(t=`${t}?${i}`),t}(e),t).then((e=>e.data)).catch((e=>{if(e&&e.details&&422===e.details.httpStatus)return{location:{top:a,left:l,width:n,height:o},valid:!0,data:(0,_.a9)(n*o,0)};throw e})).then((e=>{if(e.location&&(e.location.top!==a||e.location.left!==l||e.location.width!==n||e.location.height!==o))throw new s.Z("tilemap:location-mismatch","Tilemap response for different location than requested",{response:e,definition:{top:a,left:l,width:n,height:o}});return C.fromJSON(e)}))}static fromJSON(e){C._validateJSON(e);const t=new C;return t.location=Object.freeze((0,S.d9)(e.location)),t._updateFromData(e.data),Object.freeze(t)}static _validateJSON(e){if(!e||!e.location)throw new s.Z("tilemap:missing-location","Location missing from tilemap response");if(!1===e.valid)throw new s.Z("tilemap:invalid","Tilemap response was marked as invalid");if(!e.data)throw new s.Z("tilemap:missing-data","Data missing from tilemap response");if(!Array.isArray(e.data))throw new s.Z("tilemap:data-mismatch","Data must be an array of numbers");if(e.data.length!==e.location.width*e.location.height)throw new s.Z("tilemap:data-mismatch","Number of data items does not match width/height of tilemap")}}function T(e){return`${e.level}/${e.row}/${e.col}/${e.width}/${e.height}`}let D=a=class extends((0,h.p)(n.Z)){constructor(e){super(e),this._pendingTilemapRequests={},this._availableLevels={},this.levels=5,this.cacheByteSize=2*o.Y8.MEGABYTES,this.request=r.default,this._prefetchingEnabled=!0}initialize(){this._tilemapCache=new p.Z(this.cacheByteSize),this.addHandles([(0,v.YP)((()=>{const{layer:e}=this;return[e?.parsedUrl,e?.tileServers,e?.apiKey,e?.customParameters]}),(()=>this._initializeTilemapDefinition())),(0,v.YP)((()=>this.layer?.tileInfo?.lods),(e=>this._initializeAvailableLevels(e)),v.tX)]),this._initializeTilemapDefinition()}castLevels(e){return e<=2?(c.Z.getLogger(this.declaredClass).error("Minimum levels for Tilemap is 3, but got ",e),3):e}get size(){return 1<<this.levels}fetchTilemap(e,t,i,a){if(!this._availableLevels[e])return Promise.reject(new s.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`));const l=this._tmpTilemapDefinition,r=this._tilemapFromCache(e,t,i,l);if(r)return Promise.resolve(r);const n=a&&a.signal;return a={...a,signal:null},new Promise(((e,t)=>{(0,d.fu)(n,(()=>t((0,d.zE)())));const i=T(l);let r=this._pendingTilemapRequests[i];if(!r){r=C.fromDefinition(l,a).then((e=>(this._tilemapCache.put(i,e,e.byteSize),e)));const e=()=>delete this._pendingTilemapRequests[i];this._pendingTilemapRequests[i]=r,r.then(e,e)}r.then(e,t)}))}getAvailability(e,t,i){if(!this._availableLevels[e])return"unavailable";const a=this._tilemapFromCache(e,t,i,this._tmpTilemapDefinition);return a?a.getAvailability(t,i):"unknown"}fetchAvailability(e,t,i,a){return this._availableLevels[e]?this.fetchTilemap(e,t,i,a).catch((e=>e)).then((a=>{if(a instanceof C){const l=a.getAvailability(t,i);if("unavailable"===l)throw new s.Z("tile-map:tile-unavailable","Tile is not available",{level:e,row:t,col:i});return l}if((0,d.D_)(a))throw a;return"unknown"})):Promise.reject(new s.Z("tilemap-cache:level-unavailable",`Level ${e} is unavailable in the service`))}fetchAvailabilityUpsample(e,t,i,a,l){a.level=e,a.row=t,a.col=i;const r=this.layer.tileInfo;r.updateTileInfo(a);const n=this.fetchAvailability(e,t,i,l).catch((e=>{if((0,d.D_)(e))throw e;if(r.upsampleTile(a))return this.fetchAvailabilityUpsample(a.level,a.row,a.col,a);throw e}));return this._fetchAvailabilityUpsamplePrefetch(a.id,e,t,i,l,n),n}async _fetchAvailabilityUpsamplePrefetch(e,t,i,l,r,n){if(!this._prefetchingEnabled)return;const o=`prefetch-${e}`;if(this.handles.has(o))return;const s=new AbortController;n.then((()=>s.abort()),(()=>s.abort()));let h=!1;const c={remove(){h||(h=!0,s.abort())}};if(this.handles.add(c,o),await(0,m.MU)(10,s.signal).catch((()=>{})),h||(h=!0,this.handles.remove(o)),(0,d.Hc)(s))return;const p=new g.f(e,t,i,l),u={...r,signal:s.signal},v=this.layer.tileInfo;for(let e=0;a._prefetches.length<a._maxPrefetch&&v.upsampleTile(p);++e){const e=this.fetchAvailability(p.level,p.row,p.col,u);a._prefetches.push(e);const t=()=>{a._prefetches.removeUnordered(e)};e.then(t,t)}}_initializeTilemapDefinition(){if(!this.layer.parsedUrl)return;const{parsedUrl:e,apiKey:t,customParameters:i}=this.layer;this._tilemapCache.clear(),this._tmpTilemapDefinition={service:{url:e.path,query:(0,y.B7)({...e.query,...i,token:t??e.query?.token}),tileServers:this.layer.tileServers,request:this.request,type:this.layer.type},width:this.size,height:this.size,level:0,row:0,col:0}}_tilemapFromCache(e,t,i,a){a.level=e,a.row=t-t%this.size,a.col=i-i%this.size;const l=T(a);return this._tilemapCache.get(l)}_initializeAvailableLevels(e){this._availableLevels={},e&&e.forEach((e=>this._availableLevels[e.level]=!0))}get test(){const e=this;return{get prefetchingEnabled(){return e._prefetchingEnabled},set prefetchingEnabled(t){e._prefetchingEnabled=t},hasTilemap:(t,i,a)=>!!e._tilemapFromCache(t,i,a,e._tmpTilemapDefinition)}}};D._maxPrefetch=4,D._prefetches=new u.Z({initialSize:a._maxPrefetch}),(0,l._)([(0,f.Cb)({constructOnly:!0,type:Number})],D.prototype,"levels",void 0),(0,l._)([(0,b.p)("levels")],D.prototype,"castLevels",null),(0,l._)([(0,f.Cb)({readOnly:!0,type:Number})],D.prototype,"size",null),(0,l._)([(0,f.Cb)({constructOnly:!0,type:Number})],D.prototype,"cacheByteSize",void 0),(0,l._)([(0,f.Cb)({constructOnly:!0})],D.prototype,"layer",void 0),(0,l._)([(0,f.Cb)({constructOnly:!0})],D.prototype,"request",void 0),D=a=(0,l._)([(0,w.j)("esri.layers.support.TilemapCache")],D)},58269:(e,t,i)=>{i.d(t,{d:()=>r,h:()=>l});var a=i(81590);const l={type:a.Z,json:{origins:{service:{read:{source:["tileInfo","minScale","maxScale","minLOD","maxLOD"],reader:r}}}}};function r(e,t,i,l){if(!e)return null;const{minScale:r,maxScale:n,minLOD:o,maxLOD:s}=t;if(null!=o&&null!=s)return l&&l.ignoreMinMaxLOD?a.Z.fromJSON(e):a.Z.fromJSON({...e,lods:e.lods.filter((({level:e})=>null!=e&&e>=o&&e<=s))});if(0!==r&&0!==n){const t=e=>Math.round(1e4*e)/1e4,i=r?t(r):1/0,l=n?t(n):-1/0;return a.Z.fromJSON({...e,lods:e.lods.filter((e=>{const a=t(e.scale);return a<=i&&a>=l}))})}return a.Z.fromJSON(e)}}}]);