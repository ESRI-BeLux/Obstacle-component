"use strict";(self.webpackChunkobstacle_component=self.webpackChunkobstacle_component||[]).push([[770],{60770:(e,t,s)=>{s.r(t),s.d(t,{FeatureTileTree3DDebugger:()=>d});var i=s(36663),l=(s(91957),s(44584)),o=s(76868),a=s(81977),r=(s(7753),s(7283),s(40266)),n=s(81589),h=s(49939),c=s(89542);let d=class extends h.q{constructor(e){super(e),this._watchUpdatingTracking=new n.t,this._handles=new l.Z}get updating(){return this._watchUpdatingTracking?.updating??!1}initialize(){const{featureTiles:e}=this.view;this._handles.add(e.addClient()),this._watchUpdatingTracking.addOnCollectionChange((()=>e?.tiles),(()=>this.update()),o.nn)}destroy(){this._handles&&(this._handles.destroy(),this._handles=null),this._watchUpdatingTracking.destroy()}getTiles(){const e=e=>{const[t,s,i]=e.lij;return c.Z.fromExtent(this.view.featureTiles.tilingScheme.getExtentGeometry(t,s,i))};return this.view.featureTiles.tiles.toArray().sort(((e,t)=>e.loadPriority-t.loadPriority)).map((t=>({...t,geometry:e(t)})))}};(0,i._)([(0,a.Cb)()],d.prototype,"_watchUpdatingTracking",void 0),(0,i._)([(0,a.Cb)()],d.prototype,"updating",null),(0,i._)([(0,a.Cb)()],d.prototype,"view",void 0),d=(0,i._)([(0,r.j)("esri.views.3d.layers.support.FeatureTileTree3DDebugger")],d)},49939:(e,t,s)=>{s.d(t,{q:()=>_});var i=s(36663),l=s(30936),o=s(80085),a=s(53443),r=s(19431),n=s(61681),h=s(81977),c=(s(7753),s(7283),s(40266)),d=s(60378),p=s(43411),y=s(27624),g=s(69996);const b=[[0,179,255],[117,62,128],[0,104,255],[215,189,166],[32,0,193],[98,162,206],[102,112,129],[52,125,0],[142,118,246],[138,83,0],[92,122,255],[122,55,83],[0,142,255],[81,40,179],[0,200,244],[13,24,127],[0,170,147],[19,58,241],[22,44,35]];let _=class extends a.Z{constructor(e){super(e),this.updating=!1,this.enablePolygons=!0,this.enableLabels=!0,this._polygons=new Map,this._labels=new Map,this._enabled=!0}initialize(){this._symbols=b.map((e=>new p.Z({color:[e[0],e[1],e[2],.6],outline:{color:"black",width:1}}))),this.update()}destroy(){this._enabled=!1,this.clear()}get enabled(){return this._enabled}set enabled(e){this._enabled!==e&&(this._enabled=e,this.update())}update(){if(!this._enabled)return void this.clear();const e=this.getTiles(),t=new Array,s=new Set((this._labels.size,this._labels.keys()));e.forEach(((i,a)=>{const h=i.lij.toString();s.delete(h);const c=i.lij[0],p=i.geometry;if(this.enablePolygons&&!this._polygons.has(h)){const e=new o.Z({geometry:p,symbol:this._symbols[c%this._symbols.length]});this._polygons.set(h,e),t.push(e)}if(this.enableLabels){const s=(e=>{if((0,n.pC)(e.label))return e.label;let t=e.lij.toString();return(0,n.pC)(e.loadPriority)&&(t+=` (${e.loadPriority})`),t})(i),c=a/(e.length-1),b=(0,r.t7)(0,200,c),_=(0,r.t7)(20,6,c)/.75,u=(0,n.pC)(i.loadPriority)&&i.loadPriority>=e.length,w=new l.Z([b,u?0:b,u?0:b]),m="3d"===this.view.type?()=>new d.Z({verticalOffset:{screenLength:40/.75},callout:{type:"line",color:"white",border:{color:"black"}},symbolLayers:[new g.Z({text:s,halo:{color:"white",size:1/.75},material:{color:w},size:_})]}):()=>new y.Z({text:s,haloColor:"white",haloSize:1/.75,color:w,size:_});if(this._labels.has(h)){const e=this._labels.get(h),t=m();((0,n.Wi)(e.symbol)||JSON.stringify(t)!==JSON.stringify(e.symbol))&&(e.symbol=t)}else{const e=new o.Z({geometry:p.extent.center,symbol:m()});this._labels.set(h,e),t.push(e)}}}));const i=new Array;s.forEach((e=>{this._polygons.has(e)&&(i.push(this._polygons.get(e)),this._polygons.delete(e)),this._labels.has(e)&&(i.push(this._labels.get(e)),this._labels.delete(e))})),this.view.graphics.removeMany(i),this.view.graphics.addMany(t)}clear(){this.view.graphics.removeMany(Array.from(this._polygons.values())),this.view.graphics.removeMany(Array.from(this._labels.values())),this._polygons.clear(),this._labels.clear()}};(0,i._)([(0,h.Cb)({constructOnly:!0})],_.prototype,"view",void 0),(0,i._)([(0,h.Cb)({readOnly:!0})],_.prototype,"updating",void 0),(0,i._)([(0,h.Cb)()],_.prototype,"enabled",null),_=(0,i._)([(0,c.j)("esri.views.support.TileTreeDebugger")],_)}}]);