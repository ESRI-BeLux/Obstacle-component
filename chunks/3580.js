"use strict";(self.webpackChunkobstacle_component=self.webpackChunkobstacle_component||[]).push([[3580],{13580:(e,t,a)=>{a.r(t),a.d(t,{applyEdits:()=>h});var r,s=a(80085),i=a(41831),n=a(70375),d=a(67134),l=a(61681),o=a(3466),u=a(12173),p=a(29927),c=a(15801);async function h(e,t,a,s={}){let o,u;const p={edits:a,result:new Promise(((e,t)=>{o=e,u=t}))};e.emit("apply-edits",p);try{const{results:u,edits:p}=await async function(e,t,a,s){if(await e.load(),!function(e){return e&&null!=e.applyEdits}(t))throw new n.Z(`${e.type}-layer:no-editing-support`,"Layer source does not support applyEdits capability",{layer:e});if(!e.editingEnabled)throw new n.Z(`${e.type}-layer:editing-disabled`,"Editing is disabled for layer",{layer:e});const{edits:d,options:o}=await async function(e,t,a){const s=t&&(t.addFeatures||t.updateFeatures||t.deleteFeatures),d=t&&(t.addAttachments||t.updateAttachments||t.deleteAttachments),o=(0,l.pC)(e.infoFor3D);if(!t||!s&&!d)throw new n.Z(`${e.type}-layer:missing-parameters`,"'addFeatures', 'updateFeatures', 'deleteFeatures', 'addAttachments', 'updateAttachments' or 'deleteAttachments' parameter is required");if(!e.capabilities.data.isVersioned&&a&&a.gdbVersion)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'gdbVersion' is applicable only if the layer supports versioned data. See: 'capabilities.data.isVersioned'");if(!e.capabilities.editing.supportsRollbackOnFailure&&a&&a.rollbackOnFailureEnabled)throw new n.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'rollbackOnFailureEnabled' parameter. See: 'capabilities.editing.supportsRollbackOnFailure'");if(!e.capabilities.editing.supportsGlobalId&&a&&a.globalIdUsed)throw new n.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'globalIdUsed' parameter. See: 'capabilities.editing.supportsGlobalId'");if(!e.capabilities.editing.supportsGlobalId&&d)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'addAttachments', 'updateAttachments' and 'deleteAttachments' are applicable only if the layer supports global ids. See: 'capabilities.editing.supportsGlobalId'");if((!a||!a.globalIdUsed)&&d)throw new n.Z(`${e.type}-layer:invalid-parameter`,"When 'addAttachments', 'updateAttachments' or 'deleteAttachments' is specified, globalIdUsed should be set to true");const u={...a};if(null!=u.rollbackOnFailureEnabled||e.capabilities.editing.supportsRollbackOnFailure||(u.rollbackOnFailureEnabled=!0),!1===u.rollbackOnFailureEnabled&&"original-and-current-features"===u.returnServiceEditsOption)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'original-and-current-features' is valid for 'returnServiceEditsOption' only when 'rollBackOnFailure' is true.");if(!e.capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference&&u.returnServiceEditsInSourceSR)throw new n.Z(`${e.type}-layer:invalid-parameter`,"This layer does not support 'returnServiceEditsInSourceSR' parameter. See: 'capabilities.editing.supportsReturnServiceEditsInSourceSpatialReference'");if(u.returnServiceEditsInSourceSR&&"original-and-current-features"!==u.returnServiceEditsOption)throw new n.Z(`${e.type}-layer:invalid-parameter`,"'returnServiceEditsOption' is valid only when 'returnServiceEditsOption' is set to 'original-and-current-features'");const p={...t};if(p.addFeatures=t&&i.Z.isCollection(t.addFeatures)?t.addFeatures.toArray():p.addFeatures||[],p.updateFeatures=t&&i.Z.isCollection(t.updateFeatures)?t.updateFeatures.toArray():p.updateFeatures||[],p.deleteFeatures=t&&i.Z.isCollection(t.deleteFeatures)?t.deleteFeatures.toArray():p.deleteFeatures||[],p.addFeatures.length&&!e.capabilities.operations.supportsAdd)throw new n.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support adding features.");if(p.updateFeatures.length&&!e.capabilities.operations.supportsUpdate)throw new n.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support updating features.");if(p.deleteFeatures.length&&!e.capabilities.operations.supportsDelete)throw new n.Z(`${e.type}-layer:unsupported-operation`,"Layer does not support deleting features.");p.addAttachments=p.addAttachments||[],p.updateAttachments=p.updateAttachments||[],p.deleteAttachments=p.deleteAttachments||[],p.addFeatures=p.addFeatures.map(g),p.updateFeatures=p.updateFeatures.map(g),p.addAssets=[];const c=a&&a.globalIdUsed||o;return p.addFeatures.forEach((t=>function(e,t,a){y(e,t,a)}(t,e,c))),p.updateFeatures.forEach((t=>function(e,t,a){if(y(e,t,a),"geometry"in e&&(0,l.pC)(e.geometry)&&!t.capabilities.editing.supportsGeometryUpdate)throw new n.Z(`${t.type}-layer:unsupported-operation`,"Layer does not support geometry updates.")}(t,e,c))),p.deleteFeatures.forEach((t=>function(e,t,a){y(e,t,a)}(t,e,c))),p.addAttachments.forEach((t=>m(t,e))),p.updateAttachments.forEach((t=>m(t,e))),o&&await async function(e,t){if((0,l.Wi)(t.infoFor3D))return;const{infoFor3D:a}=t;let s=!1;for(const e of a.editFormats)if(e===r.GLTF_BINARY){s=!0;break}const i=[];for(const a of e.addFeatures)i.push(b(a,e,t,s));for(const a of e.updateFeatures)i.push(b(a,e,t,s));const n=await Promise.allSettled(i);for(const e of n)if("rejected"===e.status)throw e.reason}(p,e),{edits:await f(p),options:u}}(e,a,s);return d.addFeatures.length||d.updateFeatures.length||d.deleteFeatures.length||d.addAttachments.length||d.updateAttachments.length||d.deleteAttachments.length?{edits:d,results:await t.applyEdits(d,o)}:{edits:d,results:{addFeatureResults:[],updateFeatureResults:[],deleteFeatureResults:[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}}(e,t,a,s),h=e=>e.filter((e=>!e.error)).map(d.d9),w={edits:p,addedFeatures:h(u.addFeatureResults),updatedFeatures:h(u.updateFeatureResults),deletedFeatures:h(u.deleteFeatureResults),addedAttachments:h(u.addAttachmentResults),updatedAttachments:h(u.updateAttachmentResults),deletedAttachments:h(u.deleteAttachmentResults)};return u.editedFeatureResults?.length&&(w.editedFeatures=u.editedFeatureResults),(w.addedFeatures.length||w.updatedFeatures.length||w.deletedFeatures.length||w.addedAttachments.length||w.updatedAttachments.length||w.deletedAttachments.length)&&(e.emit("edits",w),(0,c.lQ)(e)&&c.dU.emit("edits",{layer:e,event:w})),o(w),u}catch(e){throw u(e),e}}function y(e,t,a){if(a){if("attributes"in e&&!e.attributes[t.globalIdField])throw new n.Z(`${t.type}-layer:invalid-parameter`,"Feature should have 'globalId' when 'globalIdUsed' is true");if(!("attributes"in e)&&!e.globalId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"'globalId' of the feature should be passed when 'globalIdUsed' is true")}if("geometry"in e&&(0,l.pC)(e.geometry)){if(e.geometry.hasZ&&!1===t.capabilities.data.supportsZ)throw new n.Z(`${t.type}-layer:z-unsupported`,"Layer does not support z values while feature has z values.");if(e.geometry.hasM&&!1===t.capabilities.data.supportsM)throw new n.Z(`${t.type}-layer:m-unsupported`,"Layer does not support m values while feature has m values.")}}function m(e,t){const{feature:a,attachment:r}=e;if(!a||"attributes"in a&&!a.attributes[t.globalIdField])throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to a feature with 'globalId'");if(!("attributes"in a)&&!a.globalId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have reference to 'globalId' of the parent feature");if(!r.globalId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'globalId'");if(!r.data&&!r.uploadId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment should have 'data' or 'uploadId'");if(!(r.data instanceof File&&r.data.name||r.name))throw new n.Z(`${t.type}-layer:invalid-parameter`,"'name' is required when attachment is specified as Base64 encoded string using 'data'");if(!t.capabilities.editing.supportsUploadWithItemId&&r.uploadId)throw new n.Z(`${t.type}-layer:invalid-parameter`,"This layer does not support 'uploadId' parameter. See: 'capabilities.editing.supportsUploadWithItemId'");if("string"==typeof r.data){const e=(0,o.sJ)(r.data);if(e&&!e.isBase64)throw new n.Z(`${t.type}-layer:invalid-parameter`,"Attachment 'data' should be a Blob, File or Base64 encoded string")}}async function f(e){const t=e.addFeatures,a=e.updateFeatures,r=t.concat(a).map((e=>e.geometry)),s=await(0,p.aX)(r),i=t.length,n=a.length;return s.slice(0,i).forEach(((t,a)=>e.addFeatures[a].geometry=t)),s.slice(i,i+n).forEach(((t,a)=>e.updateFeatures[a].geometry=t)),e}function g(e){const t=new s.Z;return e.attributes||(e.attributes={}),t.geometry=e.geometry,t.attributes=e.attributes,t}async function b(e,t,a,s){if((0,l.Wi)(e.geometry)||"mesh"!==e.geometry.type)return;const i=e.geometry,d=a.globalIdField;if((0,l.pC)(a.parsedUrl)&&(0,l.pC)(i.external)&&Array.isArray(i.external.source)&&1===i.external.source.length&&"source"in i.external.source[0]&&"string"==typeof i.external.source[0].source&&i.external.source[0].source.startsWith(a.parsedUrl.path))return;if(!s)throw new n.Z(`${a.type}-layer:binary-gltf-asset-not-supported`,"3DObjectFeatureLayer requires binary glTF (.glb) support for updating mesh geometry.");const o=await i.toBinaryGLTF(),p=await o.buffer(),c=`{${(0,u.D)()}}`,h=`${c}.glb`;t.addAssets.push({featureGlobalId:e.getAttribute(d),assetMapGlobalId:c,assetName:h,flags:0,data:p.data,mimeType:p.type,assetType:r.GLTF_BINARY,feature:e})}!function(e){e.GLTF_BINARY="3D_glb",e.GLTF_JSON="3D_gltf"}(r||(r={}))}}]);