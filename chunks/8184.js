"use strict";(self.webpackChunkobstacle_component=self.webpackChunkobstacle_component||[]).push([[8184],{8184:(e,t,i)=>{i.r(t),i.d(t,{ElevationQuery:()=>v,GeometryDescriptor:()=>w,getFinestLodIndex:()=>R});var s=i(67979),n=i(70375),l=i(61681),o=i(78668),a=i(17321),r=i(74304),c=i(67666),u=i(90819),h=i(90472),p=i(24568),f=i(56397),m=i(73742);class d{constructor(e,t=null){if(this.tile=e,this.zmin=0,this.zmax=0,(0,l.pC)(t)&&(0,l.pC)(e)){const i=e.extent;this._samplerData=new m.K(t,i),this.zmin=t.minValue,this.zmax=t.maxValue}}sample(e,t){if((0,l.Wi)(this._samplerData))return;const{safeWidth:i,width:s,pixelData:n,noDataValue:o,dx:a,dy:r,y1:c,x0:u}=this._samplerData,h=y(r*(c-t),0,i),p=y(a*(e-u),0,i),f=Math.floor(h),m=Math.floor(p),d=f*s+m,T=d+s,v=n[d],w=n[T],x=n[d+1],_=n[T+1];if(v!==o&&w!==o&&x!==o&&_!==o){const e=p-m,t=v+(x-v)*e;return t+(w+(_-w)*e-t)*(h-f)}}}function y(e,t,i){return e<t?t:e>i?i:e}var T=i(23758);class v{async queryAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new n.Z("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");const s=w.fromGeometry(t);let l=!1;i&&i.returnSampleInfo||(l=!0);const o={...q,...i,returnSampleInfo:!0},a=await this.query(e[e.length-1],s,o),r=await this._queryAllContinue(e,a,o);return r.geometry=r.geometry.export(),l&&delete r.sampleInfo,r}async query(e,t,i){if(!e)throw new n.Z("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||!(t instanceof w)&&"point"!==t.type&&"multipoint"!==t.type&&"polyline"!==t.type)throw new n.Z("elevation-query:invalid-geometry","Only point, polyline and multipoint geometries can be used to query elevation");const s={...q,...i},l=new g(e,t.spatialReference,s),o=s.signal;return await e.load({signal:o}),await this._createGeometryDescriptor(l,t,o),await this._selectTiles(l,o),await this._populateElevationTiles(l,o),this._sampleGeometryWithElevation(l),this._createQueryResult(l,o)}async createSampler(e,t,i){if(!e)throw new n.Z("elevation-query:invalid-layer","Elevation queries require an elevation layer to fetch tiles from");if(!t||"extent"!==t.type)throw new n.Z("elevation-query:invalid-extent","Invalid or undefined extent");const s={...q,...i};return this._createSampler(e,t,s)}async createSamplerAll(e,t,i){if(!(e=i&&i.ignoreInvisibleLayers?e.filter((e=>e.visible)):e.slice()).length)throw new n.Z("elevation-query:invalid-layer","Elevation queries require at least one elevation layer to fetch tiles from");if(!t||"extent"!==t.type)throw new n.Z("elevation-query:invalid-extent","Invalid or undefined extent");const s={...q,...i,returnSampleInfo:!0},l=await this._createSampler(e[e.length-1],t,s);return this._createSamplerAllContinue(e,t,l,s)}async _createSampler(e,t,i,s){const n=i.signal;await e.load({signal:n});const l=t.spatialReference,o=e.tileInfo.spatialReference;l.equals(o)||(await(0,h.iQ)([{source:l,dest:o}],{signal:n}),t=(0,h.iV)(t,o));const a=new E(e,t,i,s);return await this._selectTiles(a,n),await this._populateElevationTiles(a,n),new f.Tl(a.elevationTiles,a.layer.tileInfo,a.options.noDataValue)}async _createSamplerAllContinue(e,t,i,s){if(e.pop(),!e.length)return i;const n=i.samplers.map((e=>(0,p.oJ)(e.extent))),l=await this._createSampler(e[e.length-1],t,s,n);if(0===l.samplers.length)return i;const o=i.samplers.concat(l.samplers),a=new f.Tl(o,s.noDataValue);return this._createSamplerAllContinue(e,t,a,s)}async _queryAllContinue(e,t,i){const s=e.pop(),n=t.geometry.coordinates,o=t.sampleInfo;(0,l.O3)(o);const a=[],r=[];for(let t=0;t<n.length;t++){const i=o[t];i.demResolution>=0?i.source||(i.source=s):e.length&&(a.push(n[t]),r.push(t))}if(!e.length||0===a.length)return t;const c=t.geometry.clone(a),u=await this.query(e[e.length-1],c,i),h=u.sampleInfo;if(!h)throw new Error("no sampleInfo");return r.forEach(((e,t)=>{n[e].z=u.geometry.coordinates[t].z,o[e].demResolution=h[t].demResolution})),this._queryAllContinue(e,t,i)}async _createQueryResult(e,t){const i=await e.geometry.project(e.outSpatialReference,t);(0,l.O3)(i);const s={geometry:i.export(),noDataValue:e.options.noDataValue};return e.options.returnSampleInfo&&(s.sampleInfo=this._extractSampleInfo(e)),e.geometry.coordinates.forEach((e=>{e.tile=null,e.elevationTile=null})),s}async _createGeometryDescriptor(e,t,i){let s;const l=e.layer.tileInfo.spatialReference;if(t instanceof w?s=await t.project(l,i):(await(0,h.iQ)([{source:t.spatialReference,dest:l}],{signal:i}),s=(0,h.iV)(t,l)),!s)throw new n.Z("elevation-query:spatial-reference-mismatch",`Cannot query elevation in '${t.spatialReference.wkid}' on an elevation service in '${l.wkid}'`);e.geometry=w.fromGeometry(s)}async _selectTiles(e,t){const i=e.options.demResolution;if("geometry"===e.type&&this._preselectOutsideLayerExtent(e),"number"==typeof i)this._selectTilesClosestResolution(e);else if("finest-contiguous"===i)await this._selectTilesFinestContiguous(e,t);else{if("auto"!==i)throw new n.Z("elevation-query:invalid-dem-resolution",`Invalid dem resolution value '${i}', expected a number, "finest-contiguous" or "auto"`);await this._selectTilesAuto(e,t)}}_preselectOutsideLayerExtent(e){if((0,l.Wi)(e.layer.fullExtent))return;const t=new d(null);t.sample=()=>e.options.noDataValue,e.outsideExtentTile=t;const i=e.layer.fullExtent;e.geometry.coordinates.forEach((e=>{const s=e.x,n=e.y;(s<i.xmin||s>i.xmax||n<i.ymin||n>i.ymax)&&(e.elevationTile=t)}))}_selectTilesClosestResolution(e){const t=e.layer.tileInfo,i=this._findNearestDemResolutionLODIndex(t,e.options.demResolution);e.selectTilesAtLOD(i)}_findNearestDemResolutionLODIndex(e,t){const i=t/(0,a.c9)(e.spatialReference);let s=e.lods[0],n=0;for(let t=1;t<e.lods.length;t++){const l=e.lods[t];Math.abs(l.resolution-i)<Math.abs(s.resolution-i)&&(s=l,n=t)}return n}async _selectTilesFinestContiguous(e,t){const i=R(e.layer.tileInfo,e.options.minDemResolution);await this._selectTilesFinestContiguousAt(e,i,t)}async _selectTilesFinestContiguousAt(e,t,i){const s=e.layer;if(e.selectTilesAtLOD(t),t<0)return;const l=s.tilemapCache,a=e.getTilesToFetch();try{if(l)await(0,o.Hl)(Promise.all(a.map((e=>l.fetchAvailability(e.level,e.row,e.col,{signal:i})))),i);else if(await this._populateElevationTiles(e,i),!e.allElevationTilesFetched())throw e.clearElevationTiles(),new n.Z("elevation-query:has-unavailable-tiles")}catch(s){(0,o.r9)(s),await this._selectTilesFinestContiguousAt(e,t-1,i)}}async _populateElevationTiles(e,t){const i=e.getTilesToFetch(),s={},n=e.options.cache,a=e.options.noDataValue,r=i.map((async i=>{if(null==i.id)return;const o=`${e.layer.uid}:${i.id}:${a}`,r=(0,l.pC)(n)?n.get(o):null,c=(0,l.pC)(r)?r:await e.layer.fetchTile(i.level,i.row,i.col,{noDataValue:a,signal:t});(0,l.pC)(n)&&n.put(o,c),s[i.id]=new d(i,c)}));await(0,o.Hl)((0,o.as)(r),t),e.populateElevationTiles(s)}async _selectTilesAuto(e,t){this._selectTilesAutoFinest(e),this._reduceTilesForMaximumRequests(e);const i=e.layer.tilemapCache;if(!i)return this._selectTilesAutoPrefetchUpsample(e,t);const n=e.getTilesToFetch(),l={},a=n.map((async e=>{const n=new T.f(null,0,0,0,(0,p.Ue)()),a=await(0,s.q6)(i.fetchAvailabilityUpsample(e.level,e.row,e.col,n,{signal:t}));!1!==a.ok?null!=e.id&&(l[e.id]=n):(0,o.r9)(a.error)}));await(0,o.Hl)(Promise.all(a),t),e.remapTiles(l)}_reduceTilesForMaximumRequests(e){const t=e.layer.tileInfo;let i=0;const s={},n=e=>{null!=e.id&&(e.id in s?s[e.id]++:(s[e.id]=1,i++))},l=e=>{if(null==e.id)return;const t=s[e.id];1===t?(delete s[e.id],i--):s[e.id]=t-1};e.forEachTileToFetch(n,l);let o=!0;for(;o&&(o=!1,e.forEachTileToFetch((s=>{i<=e.options.maximumAutoTileRequests||(l(s),t.upsampleTile(s)&&(o=!0),n(s))}),l),o););}_selectTilesAutoFinest(e){const t=R(e.layer.tileInfo,e.options.minDemResolution);e.selectTilesAtLOD(t,e.options.maximumAutoTileRequests)}async _selectTilesAutoPrefetchUpsample(e,t){const i=e.layer.tileInfo;await this._populateElevationTiles(e,t);let s=!1;e.forEachTileToFetch(((e,t)=>{i.upsampleTile(e)?s=!0:t()})),s&&await this._selectTilesAutoPrefetchUpsample(e,t)}_sampleGeometryWithElevation(e){e.geometry.coordinates.forEach((t=>{const i=t.elevationTile;let s=e.options.noDataValue;if(i){const e=i.sample(t.x,t.y);(0,l.pC)(e)?s=e:t.elevationTile=null}t.z=s}))}_extractSampleInfo(e){const t=e.layer.tileInfo,i=(0,a.c9)(t.spatialReference);return e.geometry.coordinates.map((s=>{let n=-1;return s.elevationTile&&s.elevationTile!==e.outsideExtentTile&&(n=t.lodAt(s.elevationTile.tile.level).resolution*i),{demResolution:n}}))}}class w{export(){return this._exporter(this.coordinates,this.spatialReference)}clone(e){const t=new w;return t.geometry=this.geometry,t.spatialReference=this.spatialReference,t.coordinates=e||this.coordinates.map((e=>e.clone())),t._exporter=this._exporter,t}async project(e,t){if(this.spatialReference.equals(e))return this.clone();await(0,h.iQ)([{source:this.spatialReference,dest:e}],{signal:t});const i=new r.Z({spatialReference:this.spatialReference,points:this.coordinates.map((e=>[e.x,e.y]))}),s=(0,h.iV)(i,e);if(!s)return null;const n=this.coordinates.map(((e,t)=>{const i=e.clone(),n=s.points[t];return i.x=n[0],i.y=n[1],i})),l=this.clone(n);return l.spatialReference=e,l}static fromGeometry(e){const t=new w;if(t.geometry=e,t.spatialReference=e.spatialReference,e instanceof w)t.coordinates=e.coordinates.map((e=>e.clone())),t._exporter=(t,i)=>{const s=e.clone(t);return s.spatialReference=i,s};else switch(e.type){case"point":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?[new x(i.x,i.y,i.z,i.m)]:s?[new x(i.x,i.y,i.z)]:n?[new x(i.x,i.y,null,i.m)]:[new x(i.x,i.y)],t._exporter=(t,i)=>e.hasM?new c.Z(t[0].x,t[0].y,t[0].z,t[0].m,i):new c.Z(t[0].x,t[0].y,t[0].z,i);break}case"multipoint":{const i=e,{hasZ:s,hasM:n}=i;t.coordinates=s&&n?i.points.map((e=>new x(e[0],e[1],e[2],e[3]))):s?i.points.map((e=>new x(e[0],e[1],e[2]))):n?i.points.map((e=>new x(e[0],e[1],null,e[2]))):i.points.map((e=>new x(e[0],e[1]))),t._exporter=(t,i)=>e.hasM?new r.Z({points:t.map((e=>[e.x,e.y,e.z,e.m])),hasZ:!0,hasM:!0,spatiaReference:i}):new r.Z(t.map((e=>[e.x,e.y,e.z])),i);break}case"polyline":{const i=e,s=[],n=[],{hasZ:l,hasM:o}=e;let a=0;for(const e of i.paths)if(n.push([a,a+e.length]),a+=e.length,l&&o)for(const t of e)s.push(new x(t[0],t[1],t[2],t[3]));else if(l)for(const t of e)s.push(new x(t[0],t[1],t[2]));else if(o)for(const t of e)s.push(new x(t[0],t[1],null,t[2]));else for(const t of e)s.push(new x(t[0],t[1]));t.coordinates=s,t._exporter=(t,i)=>{const s=e.hasM?t.map((e=>[e.x,e.y,e.z,e.m])):t.map((e=>[e.x,e.y,e.z])),l=n.map((e=>s.slice(e[0],e[1])));return new u.Z({paths:l,hasM:e.hasM,hasZ:!0,spatialReference:i})};break}}return t}}class x{constructor(e,t,i=null,s=null,n=null,l=null){this.x=e,this.y=t,this.z=i,this.m=s,this.tile=n,this.elevationTile=l}clone(){return new x(this.x,this.y,this.z,this.m)}}class _{constructor(e,t){this.layer=e,this.options=t}}class g extends _{constructor(e,t,i){super(e,i),this.outSpatialReference=t,this.type="geometry"}selectTilesAtLOD(e){if(e<0)this.geometry.coordinates.forEach((e=>{e.tile=null}));else{const t=this.layer.tileInfo,i=t.lods[e].level;this.geometry.coordinates.forEach((e=>{e.tile=t.tileAt(i,e.x,e.y)}))}}allElevationTilesFetched(){return!this.geometry.coordinates.some((e=>!e.elevationTile))}clearElevationTiles(){for(const e of this.geometry.coordinates)e.elevationTile!==this.outsideExtentTile&&(e.elevationTile=null)}populateElevationTiles(e){for(const t of this.geometry.coordinates)!t.elevationTile&&t.tile?.id&&(t.elevationTile=e[t.tile.id])}remapTiles(e){for(const t of this.geometry.coordinates){const i=t.tile?.id;t.tile=i?e[i]:null}}getTilesToFetch(){const e={},t=[];for(const i of this.geometry.coordinates){const s=i.tile;if(!s)continue;const n=i.tile?.id;i.elevationTile||!n||e[n]||(e[n]=s,t.push(s))}return t}forEachTileToFetch(e){for(const t of this.geometry.coordinates)t.tile&&!t.elevationTile&&e(t.tile,(()=>{t.tile=null}))}}class E extends _{constructor(e,t,i,s){super(e,i),this.type="extent",this.elevationTiles=[],this._candidateTiles=[],this._fetchedCandidates=new Set,this.extent=t.intersection(e.fullExtent),this.maskExtents=s}selectTilesAtLOD(e,t){const i=this._maximumLodForRequests(t),s=Math.min(i,e);s<0?this._candidateTiles.length=0:this._selectCandidateTilesCoveringExtentAt(s)}_maximumLodForRequests(e){const t=this.layer.tileInfo;if(!e)return t.lods.length-1;const i=this.extent;if((0,l.Wi)(i))return-1;for(let s=t.lods.length-1;s>=0;s--){const n=t.lods[s],l=n.resolution*t.size[0],o=n.resolution*t.size[1];if(Math.ceil(i.width/l)*Math.ceil(i.height/o)<=e)return s}return-1}allElevationTilesFetched(){return this._candidateTiles.length===this.elevationTiles.length}clearElevationTiles(){this.elevationTiles.length=0,this._fetchedCandidates.clear()}populateElevationTiles(e){for(const t of this._candidateTiles){const i=t.id&&e[t.id];i&&(this._fetchedCandidates.add(t),this.elevationTiles.push(i))}}remapTiles(e){this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles.map((t=>e[t.id])))}getTilesToFetch(){return this._candidateTiles}forEachTileToFetch(e,t){const i=this._candidateTiles;this._candidateTiles=[],i.forEach((i=>{if(this._fetchedCandidates.has(i))return void(t&&t(i));let s=!1;e(i,(()=>s=!0)),s?t&&t(i):this._candidateTiles.push(i)})),this._candidateTiles=this._uniqueNonOverlappingTiles(this._candidateTiles,t)}_uniqueNonOverlappingTiles(e,t){const i={},s=[];for(const n of e){const e=n.id;e&&!i[e]?(i[e]=n,s.push(n)):t&&t(n)}const n=s.sort(((e,t)=>e.level-t.level));return n.filter(((e,i)=>{for(let s=0;s<i;s++){const i=n[s].extent;if(i&&e.extent&&(0,p.r3)(i,e.extent))return t&&t(e),!1}return!0}))}_selectCandidateTilesCoveringExtentAt(e){this._candidateTiles.length=0;const t=this.extent;if((0,l.Wi)(t))return;const i=this.layer.tileInfo,s=i.lods[e],n=i.tileAt(s.level,t.xmin,t.ymin),o=n.extent;if((0,l.Wi)(o))return;const a=s.resolution*i.size[0],r=s.resolution*i.size[1],c=Math.ceil((t.xmax-o[0])/a),u=Math.ceil((t.ymax-o[1])/r);for(let e=0;e<u;e++)for(let t=0;t<c;t++){const s=new T.f(null,n.level,n.row-e,n.col+t);i.updateTileInfo(s),this._tileIsMasked(s)||this._candidateTiles.push(s)}}_tileIsMasked(e){return!!this.maskExtents&&this.maskExtents.some((t=>e.extent&&(0,p.r3)(t,e.extent)))}}function R(e,t=0){let i=e.lods.length-1;if(t>0){const s=t/(0,a.c9)(e.spatialReference),n=e.lods.findIndex((e=>e.resolution<s));0===n?i=0:n>0&&(i=n-1)}return i}const q={maximumAutoTileRequests:20,noDataValue:0,returnSampleInfo:!1,demResolution:"auto",minDemResolution:0}}}]);