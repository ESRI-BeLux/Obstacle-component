"use strict";(self.webpackChunkobstacle_component=self.webpackChunkobstacle_component||[]).push([[1428],{11428:(e,n,i)=>{i.r(n),i.d(n,{validate:()=>r});var t=i(70507);const s={title:"Webscene",type:"object",description:"The web scene data lists the basemap, operational layers, and presentation slides to be used in the web scene. It also contains information about pop-up windows and layer styling overrides to be used in the web scene. A version property allows you to supply the version of the web scene JSON format being used.",properties:{applicationProperties:{$ref:"#/definitions/applicationProperties_schema.json"},authoringApp:{type:"string",description:"String value indicating the application which authored the webmap"},authoringAppVersion:{type:"string",description:"String value indicating the authoring App's version number."},baseMap:{description:"Basemaps give the web scene a geographic context.",$ref:"#/definitions/baseMap_schema.json"},clippingArea:{$ref:"#/definitions/clippingArea_schema.json"},ground:{$ref:"#/definitions/ground_schema.json"},heightModelInfo:{$ref:"#/definitions/heightModelInfo_schema.json"},initialState:{$ref:"#/definitions/initialState_schema.json"},mapFloorInfo:{$ref:"#/definitions/mapFloorInfo_schema.json"},mapRangeInfo:{description:"Map Range Information",$ref:"#/definitions/mapRangeInfo_schema.json"},operationalLayers:{type:"array",description:"Operational layers contain business data which are used to make thematic scenes.",items:{$ref:"#/definitions/operationalLayers_schema.json"},uniqueItems:!0},presentation:{$ref:"#/definitions/presentation_schema.json"},spatialReference:{description:"An object used to specify the spatial reference of the given geometry.",$ref:"#/definitions/spatialReference_schema.json"},tables:{type:"array",description:"An array of table objects.",items:{$ref:"#/definitions/table_schema.json"}},transportationNetworks:{type:"array",description:"Used to specify the transportation networks of the scene.",items:{$ref:"#/definitions/transportationNetwork_schema.json"}},version:{$ref:"#/definitions/version_schema.json"},viewingMode:{type:"string",enum:["global","local"]},widgets:{description:"the widgets object contains widgets that should be exposed to the user.",$ref:"#/definitions/widgets_schema.json"}},required:["ground","operationalLayers","spatialReference","version","viewingMode"],additionalProperties:!1,$schema:"http://json-schema.org/draft-07/schema",definitions:i(44740).F};var o=i(70794);const a=new t.A({allErrors:!0,extendRefs:!0});function r(e,n){return function(e){const n=c(e);if(!a.getSchema(n)){const i=function(e){const n=s.definitions[c(e)];if(!n)throw new Error(`invalid schema name to validate against '${e}'`);const i={};for(const e in n)i[e]=n[e];return i.definitions=s.definitions,i}(e);a.addSchema(i,n)}}(n),a.validate(c(n),e)?[]:(0,o.E)(a.errors??[])}function c(e){return e?`${e}_schema.json`:"webScene_schema.json"}a.addSchema(s,c())}}]);